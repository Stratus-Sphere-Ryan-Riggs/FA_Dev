nlapiLogExecution("audit","FLOStart",new Date().getTime());
/**
 * Module Description
 * 
 * Version    Date            Author           Remarks
 * 1.00       13 Oct 2016     tshanmugam
 *
 */

/**
 * The recordType (internal id) corresponds to the "Applied To" record in your script deployment. 
 * @appliedtorecord recordType
 * 
 * @param {String} type Operation types: create, edit, delete, xedit
 *                      approve, reject, cancel (SO, ER, Time Bill, PO & RMA only)
 *                      pack, ship (IF)
 *                      markcomplete (Call, Task)
 *                      reassign (Case)
 *                      editforecast (Opp, Estimate)
 * @returns {Void}
 */
function userEventBeforeSubmit(type){
 
}

/**
 * The recordType (internal id) corresponds to the "Applied To" record in your script deployment. 
 * @appliedtorecord recordType
 * 
 * @param {String} type Operation types: create, edit, delete, xedit,
 *                      approve, cancel, reject (SO, ER, Time Bill, PO & RMA only)
 *                      pack, ship (IF only)
 *                      dropship, specialorder, orderitems (PO only) 
 *                      paybills (vendor payments)
 * @returns {Void}
 */
function beforeSubmitSetTransactionEmail(type){
	
	nlapiLogExecution('DEBUG','beforeSubmitSetTransactionEmail','|------------SCRIPT STARTED------------||');
    if(type!='create')
    {
        //do nothing
        nlapiLogExecution('DEBUG','Script Exit: Invalid Operation Type','type= ' + type);
        return;
    }
	
   
	var email = nlapiGetFieldValue('email');
	var ordertype   = nlapiGetFieldText('custbody_order_type');
	var customer = nlapiGetFieldValue('entity');
	nlapiLogExecution('DEBUG','Existing value in email field',email);
	nlapiLogExecution('DEBUG','Order Type',ordertype);
	
	var cusRec = nlapiLoadRecord('customer',customer);
	var groceryEmail = cusRec.getFieldValue('custentity_fa_grocery_contact');
	var produceEmail = cusRec.getFieldValue('custentity_fa_produce_email');
	var miscEmail = cusRec.getFieldValue('custentity_fa_miscellaneous_contact_emai');
	if (ordertype == 'Produce')
	{ 	
			   if((email!="") && (email != null) && (email != undefined)){
				   if(produceEmail!=null){
					   email = produceEmail;
				   }
				   else {
					   email = miscEmail;
				   }
				   
			   }else{
				   if(produceEmail!=null){
					   email = produceEmail;
				   }
				   else {
					   email = miscEmail;
				   }
			   }
	}		

	else if (ordertype == 'Grocery') 
	{ 	
		if((email!="") && (email != null) && (email != undefined)){
			   if(groceryEmail!=null){
				   email = groceryEmail;
			   }
			   else {
				   email = miscEmail;
			   }
			   
		   }else{
			   if(groceryEmail!=null){
				   email = groceryEmail;
			   }
			   else {
				   email = miscEmail;
			   }
		   }
	}		

	else 
	{ 	
		if((email!="") && (email != null) && (email != undefined)){
			  
				   email = miscEmail;
			   }
			   
		   else{
			   
				   email = miscEmail;
			   }
	}
			

	

	var id = nlapiSetFieldValue('email',email);
    nlapiLogExecution('DEBUG','Email ' + email);
	
	
    return true;
	
    
}
